--W3_SUBQUERIES_39
--Task1
--orders issued by the salesman 'Paul Adam'. Return ord_no, purch_amt, ord_date, customer_id and salesman_id. 
select *from [W3Resource].[Inventory].[Orders]
where salesman_id =( select salesman_id from [W3Resource].[Inventory].[Salesman]
where name = 'Paul Adam'
);
--Task2
 --find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id. 
select *from [W3Resource].[Inventory].[Orders]
where salesman_id in ( select salesman_id from [W3Resource].[Inventory].[Salesman]
where city='London'
);
--Task3
--orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id
SELECT *FROM [W3Resource].[Inventory].[Orders]
WHERE SALESMAN_ID=(
SELECT DISTINCT SALESMAN_ID 
FROM [W3Resource].[Inventory].[Orders]
WHERE CUSTOMER_ID=3007);
--TASK4
--SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT * FROM [W3Resource].[Inventory].[Orders]

SELECT *FROM [W3Resource].[Inventory].[Orders]
WHERE PURCH_AMT>(
SELECT AVG (PURCH_AMT) FROM [W3Resource].[Inventory].[Orders]
WHERE ord_date='2012-10-10');
--TASK5
--QL query to find all the orders generated in New York city. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
SELECT *FROM [W3Resource].[Inventory].[Orders]
WHERE SALESMAN_ID IN (
SELECT salesman_id FROM [W3Resource].[Inventory].[Salesman]
WHERE CITY='NEW YORK');
--TASK6
-- SQL query to determine the commission of the salespeople in Paris. Return commission

SELECT commission FROM [W3Resource].[Inventory].[Salesman]
WHERE SALESMAN_ID IN (
SELECT salesman_id FROM [W3Resource].[Inventory].[Customer]
WHERE CITY='paris');
--TASK7
--Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.
SELECT CUSTOMER_ID FROM [W3Resource].[Inventory].[Customer]
WHERE customer_id=(
SELECT salesman_id-2001 FROM [W3Resource].[Inventory].[Salesman] 
WHERE NAME='MC LYON'
);
--TASK8
 --SQL query to count the number of customers with grades above the average in New York City. Return grade and count.  

SELECT GRADE, COUNT(*) AS NUM  FROM [W3Resource].[Inventory].[Customer]
GROUP BY GRADE
HAVING grade> (
SELECT AVG(GRADE) FROM [W3Resource].[Inventory].[Customer]
WHERE CITY='NEW YORK');

--TASK9
-- SQL query to find those salespeople who earned the maximum commission. Return ord_no, purch_amt, ord_date, and salesman_id.
SELECT ord_no, purch_amt, ord_date, salesman_id FROM [W3Resource].[Inventory].[Orders]
WHERE salesman_id IN( 
SELECT SALESMAN_ID FROM [W3Resource].[Inventory].[Salesman] 
WHERE COMMISSION=(
SELECT MAX(commission) FROM [W3Resource].[Inventory].[Salesman])
);
--TASK10
--write SQL query to find the customers who placed orders on 17th August 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.
SELECT *FROM [W3Resource].[Inventory].[Customer]
WHERE customer_iD IN (
SELECT CUSTOMER_ID FROM [W3Resource].[Inventory].[Orders]
WHERE ORD_DATE='2012-08-17');

--TASK11
--SQL query to find salespeople who had more than one customer. Return salesman_id and name
SELECT SALESMAN_ID, NAME FROM [W3Resource].[Inventory].[Salesman] A
WHERE 1<(
SELECT COUNT(*) FROM [W3Resource].[Inventory].[Customer]
WHERE salesman_id=a.salesman_id);
--TASK12
-- to find those orders, which are higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

SELECT *FROM [W3Resource].[Inventory].[Orders] a
WHERE purch_amt >(
SELECT AVG(PURCH_AMT) FROM [W3Resource].[Inventory].[Orders] b
where a.customer_id=b.customer_id);

--Task13
-- SQL query to find those orders that are equal or higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
SELECT *FROM [W3Resource].[Inventory].[Orders] a
WHERE purch_amt >=(
SELECT AVG(PURCH_AMT) FROM [W3Resource].[Inventory].[Orders] b
where a.customer_id=b.customer_id);
--TASK14
--query to find the sums of the amounts from the orders table, grouped by date, and eliminate all dates where the sum was not at least 1000.00 above the maximum order amount for that date.


SELECT ORD_DATE, SUM(PURCH_AMT) FROM [W3Resource].[Inventory].[Orders] b
GROUP BY ord_date
having sum(purch_amt) > (
SELECT 1000+MAX(PURCH_AMT) FROM [W3Resource].[Inventory].[Orders] a
where a.ord_date=b.ord_date);

--Task15
-- query to extract all data from the customer table if and only if one or more of the customers in the customer table are located in London. 

select cust_name, customer_id, city
from [W3Resource].[Inventory].[Customer]
where exists
(select *from [W3Resource].[Inventory].[Customer]
where city='London')
--Task16
--to find salespeople who deal with multiple customers. Return salesman_id, name, city and commission.
select salesman_id, [name], city, commission
from SELECT *FROM [W3Resource].[Inventory].[Salesman]
where (
select count(customer_id) FROM [W3Resource].[Inventory].[Customer]
group by (customer_id));